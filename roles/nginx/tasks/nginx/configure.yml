---
- name: 'nginx | configure | Remove default vhost configuration'
  become: true
  tags:
    - nginx
    - nginx_configure
  notify: 'Restart nginx'
  ansible.builtin.file:
    path: '/etc/nginx/conf.d/default.conf'
    state: absent

- name: 'nginx | configure | Ensure required folders exists'
  become: true
  tags:
    - nginx
    - nginx_configure
  loop:
    - path: '/etc/nginx/custom/'
      owner: 'root'
      group: 'root'
    - path: '/etc/nginx/custom/ssl'
      owner: 'root'
      group: 'root'
    - path: '/etc/nginx/custom/robots'
      owner: 'root'
      group: 'root'
    - path: '/etc/nginx/custom/robots/configs'
      owner: 'root'
      group: 'root'
    - path: '/etc/nginx/custom/robots/files'
      owner: 'root'
      group: 'root'
    - path: "{{ nginx_log_path }}/vhosts"
      owner: 'nginx'
      group: 'adm'
  ansible.builtin.file:
    path: '{{ item.path }}'
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: '0750'
    state: directory

- name: 'nginx | configure | Deploy static configurations files'
  become: true
  tags:
    - nginx
    - nginx_configure
    - nginx_static_configs
  loop:
    - name: 'fastcgi_params.conf'
      dest: 'custom'
    - name: 'logging.conf'
      dest: 'custom'
    - name: 'proxy_params.conf'
      dest: 'custom'
    - name: 'robots_conf_disallow_all.conf'
      dest: 'custom/robots/configs'
    - name: 'robots_file_disallow_all.txt'
      dest: 'custom/robots/files'
    - name: 'security.conf'
      dest: 'custom'
  notify: 'Restart nginx'
  ansible.builtin.copy:
    dest: "/etc/nginx/{{ item.dest }}/{{ item.name }}"
    src: "nginx/{{ item.name }}"
    owner: 'root'
    group: 'root'
    mode: '0644'
    backup: true

- name: 'nginx | configure | Deploy configurations templates'
  become: true
  tags:
    - nginx
    - nginx_configure
    - nginx_config_files
  notify: 'Restart nginx'
  loop:
    - src: acme-location.conf.j2
      dest: 'custom/acme-location.conf'
  ansible.builtin.template:
    dest: "/etc/nginx/{{ item.dest }}"
    src: "etc/nginx/{{ item.src }}"
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'nginx | configure | Deploy nginx general configuration'
  become: true
  tags:
    - nginx
    - nginx_configure
    - nginx_general
  notify: 'Restart nginx'
  ansible.builtin.template:
    src: 'etc/nginx/nginx.conf.j2'
    dest: '/etc/nginx/nginx.conf'
    backup: true
    owner: 'root'
    group: 'root'
    mode: '0644'
    lstrip_blocks: true
    trim_blocks: true


- name: 'nginx | configure | Deploy vhosts'
  become: true
  tags:
    - nginx
    - nginx_configure
    - nginx_vhost
  notify: 'Restart nginx'
  loop: "{{ nginx_vhosts }}"
  loop_control:
    loop_var: __vhost
  ansible.builtin.template:
    dest: '/etc/nginx/conf.d/{{ __vhost.name }}.conf'
    src: 'etc/nginx/nginx_vhost.j2'
    owner: 'root'
    group: 'root'
    mode: '0644'
    lstrip_blocks: true
    trim_blocks: true

- name: 'nginx | configure | Generate DH file'
  become: true
  tags:
    - nginx
    - nginx_configure
    - nginx_dh
    - nginx_vhost
  community.crypto.openssl_dhparam:
    path: '/etc/nginx/custom/ssl/dh.pem'
    size: "{{ nginx_conf_dh_size }}"
    force: false
    owner: 'root'
    group: 'root'
    mode: '0644'
